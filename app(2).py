# -*- coding: utf-8 -*-
"""Copy of Wellness Planner

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YVpMmrlJCeW2wZiZha1Sx5NOadc7dAxv
"""

import streamlit as st
import google.generativeai as genai


genai.configure(api_key="AIzaSyAMDFrV_Yuu7295m0hu1cv14rRJdQTDpLI")

model = genai.GenerativeModel("gemini-2.5-flash")

name = input("What is your name, or how should we call you? ")

print(f"Hi {name}! Welcome to the community! Let's get started.")
print()

dietary_lifestyle = input("What is your dietary lifetsyle (vegetarian, vegan, non-vegetarian, no restrictions, etc...)? ")
print()

goals = input("What is your aim with this platform? Is it fitness, health, or weight-management? Pick one of these for now: ")
if goals == "fitness":
    print("Looks like you want to improve your fitness levels. Good for you!")
    specific = input("What are your specific fitness goals? ")
    particular = input("Any specific area of your body or do you have any further specifications? ")
elif goals == "health":
    print("Looks like you want to improve your health. Good for you!")
    specific = input("What is your specific health goals? ")
    particular = input("Any other notes for me, or do you have any further specifications? ")
elif goals == "weight-management":
    print("Looks like you want to work on your weight. Good for you!")
    specific = input("What is your goal weight? ")
    particular = input("Any other notes for me, or do you have any further specifications? ")

else:
    print("Please pick an option from the three listed above for now, or cross-check your spelling.")


date = input("What is your goal date? Provide your answer in the following format: MM/DD/YYYY ")
print()

investment = input("How much are you willing to invest per month? Provide a range and we will tailor suggestions accordingly. ")
print()

age = input("Lastly, what is your age? ")
if int(age) <= 1:
    print("You fall under the infant category.")
elif int(age) > 1 and int(age) < 13:
    print("You fall under the child category.")
elif int(age) >= 13 and int(age) < 18:
    print("You fall under the teenager category.")
elif int(age) >= 18:
    print("You fall under the adult category.")

details = {
    "Dietary Lifestyle": dietary_lifestyle,
    "Goal(s)": goals,
    "Projected Goal Date": date,
    "Preferred Investment Range": investment,
    "Age": age
}

print()
print("Thank you! Here is the information you gave us so far:")
print()
print(details)

new_prompt = f"""
            You are my personal dietitian and trainer, tailoring my dietary needs and restrictions to tailor personalized meal plans.
            Provide advice to help me meet my goals. Provide a suggested calorie count, and weekly planner of what I should be eating or doing to achieve your goals by your goal date.
            Provide the output in plain text. Do not use any markdown formatting, including headings, lists, bold text, or underlining. Structure the information clearly using line breaks and indentation only. Use bullet points under subheadings with hyphens.

            Here is the information about me from the provided data:
            Dietary Lifestyle: {dietary_lifestyle}
            Age: {age}
            Goal(s)": {goals}
            Specific Goal: {specific}
            Particular Notes/Specifications: {particular}
            Projected Goal Date: {date}
            Preferred Investment Range: {investment}

            Based on this information, I am {age} years old, and my dietary lifestyle is {dietary_lifestyle}. My goal date is {date}, and I'm willing to invest {investment} per month. I want to work on my {goals}, specifically {specific}. I also have some further notes and specifications: {particular}.
            """
print(new_prompt)
text2 = model.generate_content([new_prompt])
print(text2.text)

"""# Task
Convert the provided Python code, which takes user input for dietary lifestyle and goals and then calls the Gemini API, into a Streamlit application with a user-friendly and aesthetically pleasing UI including headers, subheadings, buttons, a sidebar, and text entry fields. Provide instructions on how to run the Streamlit app.

## Install streamlit

### Subtask:
Install the necessary libraries for building the Streamlit application.

**Reasoning**:
Install the required library `streamlit` using pip.
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit

import streamlit as st
import google.generativeai as genai

# Configure the Gemini API
# It's recommended to use Streamlit secrets for API keys
genai.configure(api_key=st.secrets["GOOGLE_API_KEY"])

model = genai.GenerativeModel("gemini-2.5-flash")

st.title("Personal Dietitian and Trainer App")

st.sidebar.header("About You")
name = st.sidebar.text_input("What is your name, or how should we call you?")
dietary_lifestyle = st.sidebar.text_input("What is your dietary lifestyle (vegetarian, vegan, non-vegetarian, no restrictions, etc...)?")
goals = st.sidebar.selectbox("What is your aim with this platform?", ("fitness", "health", "weight-management"))
date = st.sidebar.text_input("What is your goal date? Provide your answer in the following format: MM/DD/YYYY")
investment = st.sidebar.text_input("How much are you willing to invest per month? Provide a range.")
age = st.sidebar.text_input("Lastly, what is your age?")

specific = ""
particular = ""

if goals == "fitness":
    specific = st.sidebar.text_input("What are your specific fitness goals?")
    particular = st.sidebar.text_input("Any specific area of your body or do you have any further specifications?")
elif goals == "health":
    specific = st.sidebar.text_input("What is your specific health goals?")
    particular = st.sidebar.text_input("Any other notes for me, or do you have any further specifications?")
elif goals == "weight-management":
    specific = st.sidebar.text_input("What is your goal weight?")
    particular = st.sidebar.text_input("Any other notes for me, or do you have any further specifications?")


# Main content area
st.header("Your Personalized Plan")
st.subheader(f"Hi {name}! Welcome to the community! Let's get started.")

st.write("Here is the information you gave us so far:")
st.write(f"Dietary Lifestyle: {dietary_lifestyle}")
st.write(f"Goal(s): {goals}")
st.write(f"Specific Goal: {specific}")
st.write(f"Particular Notes/Specifications: {particular}")
st.write(f"Projected Goal Date: {date}")
st.write(f"Preferred Investment Range: {investment}")
st.write(f"Age: {age}")

if st.sidebar.button("Generate Plan"):
    new_prompt = f"""
                You are my personal dietitian and trainer, tailoring my dietary needs and restrictions to tailor personalized meal plans.
                Provide advice to help me meet my goals. Provide a suggested calorie count, and weekly planner of what I should be eating or doing to achieve your goals by your goal date.
                Provide the output in plain text. Do not use any markdown formatting, including headings, lists, bold text, or underlining. Structure the information clearly using line breaks and indentation only. Use bullet points under subheadings with hyphens.

                Here is the information about me from the provided data:
                Dietary Lifestyle: {dietary_lifestyle}
                Age: {age}
                Goal(s)": {goals}
                Specific Goal: {specific}
                Particular Notes/Specifications: {particular}
                Projected Goal Date: {date}
                Preferred Investment Range: {investment}

                Based on this information, I am {age} years old, and my dietary lifestyle is {dietary_lifestyle}. My goal date is {date}, and I'm willing to invest {investment} per month. I want to work on my {goals}, specifically {specific}. I also have some further notes and specifications: {particular}.
                """
    with st.spinner("Generating your personalized plan..."):
        text2 = model.generate_content([new_prompt])
        st.write("---")
        st.subheader("Your Plan:")
        st.write(text2.text)

"""## How to run the Streamlit app

1. Save the code in the code cell above as a Python file (e.g., `app.py`).
2. Open your terminal or command prompt.
3. Navigate to the directory where you saved the file.
4. Run the command: `streamlit run app.py`
"""